<widget id="CellFormatter.widget.CellFormatter" needsEntityContext="false" xmlns="http://www.mendix.com/widget/1.0/">
    <name>Cell Formatter</name>
    <description>Dummy widget</description>
    <icon/>
    <properties>
        <property key="gridName" type="string" required="true" defaultValue="">
            <caption>Grid name</caption>
            <category>Behavior</category>
            <description>Name of the data grid widget.</description>
        </property>
		<property key="gridEntity" type="entity" required="true">
		    <caption>Grid Entity</caption>
			<category>Behavior</category>
	 		<description>The type of objects in the grid.</description>
		</property>        
        <property key="rules" type="object" isList="true">
            <caption>Rules</caption>
            <category>Behavior</category>
            <description>Rules for styling the grid.</description>
            <properties>
                <property key="columnName" type="string" required="false" defaultValue="">
                    <caption>Column name</caption>
                    <category>Behavior</category>
                    <description>(Optional) Name of the data grid column that will get a class. If blank, style will be applied to the row.</description>
                </property>        
                <property key="js" type="string"  multiline="true" required="false" defaultValue="">
                    <caption>Rule JavaScript</caption>
                    <category>Behavior</category>
                    <description>(Optional) This will be overridden if you select a nanoflow. JavaScript that returns true when you want the class applied. You have 2 objects available: rowObj and contextObj.
                    (ex: Check to see if an attribute of the row matches one from the grid: 'return rowObj.get("attributeName") === contextObject.get("attributeName");' )
                    </description>
                </property>
                <property key="ruleNanoflow" type="nanoflow" entityProperty="../gridEntity" required="false">
                    <caption>Nanoflow</caption>
                    <category>Behavior</category>
                    <description>(Optional) A nanoflow that returns a boolean. If you don't use a nanoflow, you must define custom JavaScript instead.</description> 
                    <returnType type="String" />
                </property>   
                <property key="position" type="enumeration" defaultValue="only">
                    <caption>Postion</caption>
                    <category>Behavior</category>
                    <description>Position where to place the String</description>
                    <enumerationValues>
                         <enumerationValue key="only">Replace</enumerationValue>
                        <enumerationValue key="first">Before</enumerationValue>
                        <enumerationValue key="last">After</enumerationValue>
                    </enumerationValues>
                </property>
            </properties> 
        </property>        
    </properties>
</widget>
